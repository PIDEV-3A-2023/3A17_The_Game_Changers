# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    images_directory: '%kernel.project_dir%/public/images'
    #twilio_account_sid: 'AC0ce74c8f65b20a8e927d7f39a8abe10f'
    #twilio_auth_token: '3d0ff5057e0962b0e69eec1afb2637bd'
    #twilio_messaging_service_sid: 'MG147a76cf5edd62f5f22e2f30f68bde69'
    
services:
    Knp\Snappy\Pdf:
        arguments:
            - /usr/local/bin/wkhtmltopdf
            - ["C:\\Users\\user\\Desktop\\adem\\public\\pdf"]

    App\Form\FileToFilePathTransformer:
        arguments:
            - '%vehicule_image_directory%'

    App\Form\FilePathToFileTransformer:
        arguments:
            - '%vehicule_image_directory%'

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    #App\Service\TwilioService:
        #arguments:
           # $accountSid: '%twilio_account_sid%'
           # $authToken: '%twilio_auth_token%'
           # $messagingServiceSid: '%twilio_messaging_service_sid%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Repository\SuiviReclamationRepository:
        class: App\Repository\SuiviReclamationRepository
        arguments:
            - '@doctrine'
        tags: ['doctrine.repository_service']
